<div class="form-outer">
  <%= form_with model: [:manage, @comic], class: 'form' do |form| %>
    <div class="form-content">
      <div class="form-row">
        <div class="form-label">
          <%= form.label :title, I18n.t("comic.title") %>
        </div>
        <div class="form-input">
          <%= form.text_field :title, placeholder: I18n.t("comic.title_placeholder"), class: "form-text" %>
        </div>
      </div>

      <div class="form-row">
        <div class="form-label">
          <%= form.label :description, I18n.t("comic.description") %>
        </div>
        <div class="form-input">
          <%= form.text_area :description, placeholder: I18n.t("comic.description_placeholder"), class: "form-text" %>
        </div>
      </div>

      <div class="form-row">
        <div class="form-label">
          <%= form.label :publish_date, I18n.t("comic.publish_date") %>
        </div>
        <div class="form-input">
          <%= form.date_field :publish_date, class: "form-date" %>
        </div>
      </div>

      <div class="form-row">
        <div class="form-label">
          <%= form.label :is_published, I18n.t("comic.is_published") %>
        </div>
        <div class="form-input">
          <%= form.check_box :is_published, class: "form-check-box" %>
        </div>
      </div>

      <div class="form-row">
        <div class="form-label">
          <%= form.label nil, I18n.t("comic.image") %>
        </div>
        <div class="form-input form-file">
          <%= form.file_field :image, class: 'form-hidden' %>
          <%= form.label :image do %>
            <%= form_comic_image(@comic) %>
          <% end %>
        </div>
      </div>

      <div class="form-row">
        <div class="form-label">
          <%= form.label :tag_list, I18n.t("comic.tag_list") %>
        </div>
        <div class="form-input tag-cloud">
          <%= form.hidden_field :tag_list, placeholder: I18n.t("comic.title_placeholder"), class: "form-hidden" %>
          <div class="tags" id="tags">
            <% tag_cloud(@comic.tags, %w(tag1 tag2 tag3 tag4)) do |tag, css_class| %>
              <div class="tag" id="tag_<%=  tag.name %>">
                <div class="tag_name"><%= tag.name %></div>
                <i class="fa-solid fa-xmark closeable" onclick="removeTag('<%= tag.name %>')"></i>
              </div>
            <% end %>
          </div>

          <fieldset class="form-input-icon">
            <i class="fa-solid fa-tags" title="<%= I18n.t("comic.add_tag") %>"></i>
            <input type="text" class="form-input tag-new" id="newTag" />
            <i class="icon-question fa-regular fa-circle-question" title="<%= I18n.t("comic.add_tag_help") %>"></i>
          </fieldset>

        </div>
      </div>
    </div>
    <div class="form-footer">
      <div class="action form-cancel">
        <%= link_to :back do %>
          <i class='fa fa-chevron-left' aria-hidden='true'></i> <%= I18n.t("back") %>
        <% end %>
      </div>
      <div class="spacer"></div>
      <div class="action submit"><%= manager_button(form, text: 'update', icon: 'chevron-right', dir: 'left') %></div>
    </div>
  <% end %>
</div>

<script>
    const known_tags = [<%= @known_tags.html_safe %>];
    const comic_tags = <%= @comic.tag_list.to_json.html_safe %>;
    const newTagInput = document.getElementById('newTag');
    const current_tag_list = document.getElementById('comic_tag_list');
    const tags = document.getElementById('tags');

    function sortTags() {
        Array.prototype.slice.call(document.body.querySelectorAll('div.tag')).sort(function sort (ea, eb) {
            let a = ea.id;
            let b = eb.id;
            if (a < b) return -1;
            if (a > b) return 1;
            return 0;
        }).forEach(function(div) {
            div.parentElement.appendChild(div);
        });
    }

    function buildTag(name) {
      let tag_div = document.createElement("div");
      tag_div.className = "tag";
      tag_div.id = "tag_" + name;

      let tag_name = document.createElement("div");
      tag_name.className = "tag_name";
      tag_name.innerText = name;

      let i = document.createElement("i");
      i.className = "fa-solid fa-xmark closeable";
      i.onclick = function() { removeTag(name) };

      tag_div.append(tag_name);
      tag_div.append(i);

      tags.append(tag_div);
    }

    function tagFound(name) {
        comic_tags.includes(name);
        return comic_tags.includes(name);
    }

    function addTag(name) {
      if (!tagFound(name)) {
          comic_tags.push(name);
          buildTag(name);
          sortTags();
      }
      current_tag_list.value = comic_tags.join(',');
    }

    function removeTag(name) {
        if (tagFound(name)) {
            document.getElementById('tag_' + name).remove();
            comic_tags.splice(comic_tags.indexOf(name), 1);
            current_tag_list.value = comic_tags;
        }
    }

    newTagInput.addEventListener('keypress', function(event) {
        const key = event.code;
        if ((key === 'Space') || (key === 'Enter')) {
            addTag(newTagInput.value);
            newTagInput.value = '';
            event.preventDefault();
        }
    });



    sortTags();
</script>
